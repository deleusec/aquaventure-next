// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String        @unique
  password     String
  role         Role          @default(USER)
  reservations Reservation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  media     Media[]
}

enum Role {
  USER
  ADMIN
}

model ActivityType {
  id         Int        @id @default(autoincrement())
  name       String
  activities Activity[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Activity {
  id             Int           @id @default(autoincrement())
  name           String
  activityTypeId Int
  availableSpots Int
  description    String?
  startDateTime  DateTime
  duration       Int 
  reservations   Reservation[]

  activityType ActivityType @relation(fields: [activityTypeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  media     Media[] 
}

model Reservation {
  id              Int      @id @default(autoincrement())
  userId          Int
  activityId      Int
  reservationDate DateTime @default(now())
  status          Boolean  @default(true)

  user     User     @relation(fields: [userId], references: [id])
  activity Activity @relation(fields: [activityId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MediaType {
  PROFILE
  ACTIVITY
}

model Media {
  id         Int      @id @default(autoincrement())
  url        String
  type       MediaType
  userId     Int?     @unique
  activityId Int?     @unique

  user       User?     @relation(fields: [userId], references: [id])
  activity   Activity? @relation(fields: [activityId], references: [id])

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
